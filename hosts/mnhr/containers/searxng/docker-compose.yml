---
services:
  redis:
    container_name: redis
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: no
    networks:
      - internal
    volumes:
      - valkey-data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: no
    networks:
      internal:
    volumes:
      - searxng-data:/etc/searxng:rw
    environment:
      - SEARXNG_HOSTNAME
      - SEARXNG_BASE_URL=https://${INTERNAL_DOMAIN_NAME}/
      - UWSGI_WORKERS=4
      - UWSGI_THREADS=4
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    labels:
      - traefik.enable=true
      # HTTP Router Configuration
      - traefik.http.routers.searxng.rule=Host(`${INTERNAL_DOMAIN_NAME}`)
      - traefik.http.routers.searxng.entrypoints=web
      - traefik.http.routers.searxng.service=searxng-service
      # HTTPS Router Configuration
      - traefik.http.routers.searxng-https.rule=Host(`${INTERNAL_DOMAIN_NAME}`)
      - traefik.http.routers.searxng-https.tls=true
      - traefik.http.routers.searxng-https.entrypoints=websecure
      - traefik.http.routers.searxng-https.tls.certresolver=stepca
      - traefik.http.routers.adguard-https.service=searxng-service
      # Shared Service Configuration
      - traefik.http.services.searxng-service.loadbalancer.server.port=8080

    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

networks:
  internal:
    name: searxng_internal

volumes:
  valkey-data:
  searxng-data:

